@model VMPago

@{
    ViewData["Title"] = Model.Id > 0 ? "Ver Pago" : "Ver Pago";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


 <div style="max-width: 800px; margin: 0 auto; font-family: Arial, sans-serif; background: #f9f9f9; border: 1px solid #ddd; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); padding: 20px;">
    <!-- Encabezado con el logo y datos -->
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
        <div>
            <img src="~/Admin/assets/img/LogoScout.png" width="45%" />
        </div>
        <div style="text-align: right; color: #555;">
            <p style="margin: 0;"><strong>SCOUTS DE ARGENTINA ASOCIACION CIVIL</strong></p>
            <p style="margin: 0;">Libertad 1282 (C1012AAZ) C.A.B.A.</p>
            <p style="margin: 0;">CUIT: 30-69732250-3</p>
            <p style="margin: 0;">Personería Jurídica Nacional: N° 1645416</p>
            <p style="margin: 0;">Res. I.G.J. N° 999 del 24/09/1998</p>
            <p style="margin: 0;">Inicio de Actividades: 1/12/1996</p>
        </div>
    </div>

    <hr style="border: none; height: 1px; background: #ddd; margin: 20px 0;" />



    @if(User.IsInRole("SuperAdmin"))
    {
        <!-- Contenedor de botones alineados horizontalmente -->
        <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 10px;">

            @{
                // Determina si el botón debería estar deshabilitado
                bool isDisabled = Model.Autorizacion.EstadoAutorizacion.Estado == "Autorizado" || Model.Autorizacion.EstadoAutorizacion.Estado == "Rechazado";
            }

            <div class="estado-botones">
                @if (Model.Autorizacion.EstadoAutorizacion.Estado == "Autorizado")
                {
                    <button class="btn btn-success btn-sm btn-rounded" style="height: 37px; text-align: center; font-size: 15.4px">
                        Estado: @Model.Autorizacion.EstadoAutorizacion.Estado
                    </button>
                }
                else if (Model.Autorizacion.EstadoAutorizacion.Estado == "Pendiente")
                {
                    <button class="btn btn-warning btn-sm btn-rounded" style="height: 37px; text-align: center; font-size: 15.4px">
                        Estado: @Model.Autorizacion.EstadoAutorizacion.Estado
                    </button>
                }
                else
                {
                    <button class="btn btn-danger btn-sm btn-rounded" style="height: 37px; text-align: center; font-size: 15.4px">
                        Estado: @Model.Autorizacion.EstadoAutorizacion.Estado
                    </button>
                }

                <!-- Botón para abrir el modal -->
                <button type="button" class="btn btn-primary abrir-modal"
                        data-bs-toggle="modal"
                        data-bs-target="#basicModal"
                        data-id="@Model.Id"
                @(isDisabled ? "disabled" : "")>
                    Cambiar Estado
                </button>


                <p class="mt-2 text-primary">Una vez <strong>Autorizado</strong> o <strong>Rechazado</strong> el <strong>Pago</strong> ¡Ya no se puede cambiar!</p>

            </div>
        </div>
    }
    

     <!-- Modal -->
    <div class="modal fade" id="basicModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Cambiar Estado</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Selección del estado -->
                    <div style="margin-bottom: 20px;">
                        <label for="estado">Selecciona un estado:</label>
                        <select id="estado" class="form-control">
                            @foreach (var estado in ViewBag.Estados)
                            {
                                <option value="@estado.Value" selected="@(estado.Text == ViewBag.EstadoActual ? "selected" : null)">
                                    @estado.Text
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" id="guardarCambios">
                        Guardar Cambios
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Información del recibo -->
    <div style="margin-bottom: 20px; padding: 10px; background: #f9f9f9; border-radius: 5px; border: 1px solid #ddd; position: relative;">
        <!-- Contenedor de los botones en la parte superior izquierda -->

        <!-- Título y datos del recibo -->
        <h7 style="margin: 0; color: #007bff;"><strong>Recibo</strong></h7>
        <div style="margin-top: 10px;">
            <p style="margin: 5px 0;"><strong>Código:</strong> @Model.Codigo</p>
            <p style="margin: 5px 0;"><strong>Fecha:</strong> @Model.FechaDePago.ToString("dd/MM/yyyy")</p>
        </div>
    </div>
   
    
    <!-- Sección del miembro -->
    <div style="margin-bottom: 20px; padding: 10px; background: #f9f9f9; border-radius: 5px; border: 1px solid #ddd;">
        <h7 style="margin: 0; color: #007bff;"><strong>Miembro</strong></h7>
        <p style="margin: 5px 0;"><strong>Nombre:</strong> @Model.Miembro.Nombre</p>
        <p style="margin: 5px 0;"><strong>Apellido:</strong> @Model.Miembro.Apellido</p>
        <p style="margin: 5px 0;"><strong>DNI:</strong> @Model.Miembro.Dni</p>
    </div>

    <hr style="border: none; height: 1px; background: #ddd; margin: 20px 0;" />

    <!-- Tabla de detalles -->
    <table style="width: 100%; border-collapse: collapse; background: #fff; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
        <thead style="background: #007bff; color: #fff;">
            <tr>
                <th style="padding: 10px; text-align: left; font-weight: normal;">Fecha Pago</th>
                <th style="padding: 10px; text-align: left; font-weight: normal;">Categoría</th>
                <th style="padding: 10px; text-align: left; font-weight: normal;">Modalidad</th>
                <th style="padding: 10px; text-align: left; font-weight: normal;">Monto</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var detalle in Model.ListaDetalles)
            {
                <tr style="border-bottom: 1px solid #ddd;">
                    <td style="padding: 10px;">@Model.FechaDePago.ToString("dd/MM/yyyy")</td>
                    <td style="padding: 10px;">@detalle.CategoriaPago?.CategoriaNombre</td>
                    <td style="padding: 10px;">@Model.TipoModalidad</td>
                    <td style="padding: 10px; color: #28a745; font-weight: bold;">$ @detalle.Monto.ToString("N2")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Total -->
    <div style="text-align: right; margin-top: 20px; background: #007bff; color: #fff; padding: 10px; border-radius: 5px;">
        <p style="margin: 0;"><strong>Total:</strong> $ @Model.Total.ToString("N2")</p>
    </div> 
</div>  


<!-- CSS de Toastr -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

<!-- JS de Toastr -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>




<script>
    $(document).on("click", ".abrir-modal", function () {
        var idPago = $(this).data("id");  // Obtener el ID del pago desde el botón
        console.log("🟢 Botón 'Cambiar Estado' presionado - ID del Pago:", idPago);

        $("#guardarCambios").attr("data-id", idPago);  // Pasar el ID al botón de guardar
    });

    $("#guardarCambios").click(function () {
        var idPago = $(this).attr("data-id"); // Obtener el ID del pago desde el atributo data-id
        var nuevoEstado = $("#estado").val(); // Obtener el nuevo estado seleccionado

        console.log("Botón 'Guardar Cambios' presionado");
        console.log("ID del Pago:", idPago);
        console.log("Nuevo Estado:", nuevoEstado);

        // Validaciones
        if (!idPago || idPago === "undefined") {
            toastr.error("Error: Falta el ID del pago.");
            return;
        }
        if (!nuevoEstado || nuevoEstado === "undefined") {
            toastr.error("Error: Debes seleccionar un estado.");
            return;
        }

        // Enviar la solicitud de cambio de estado al servidor
        fetch('/Pagos/CambiarEstado', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                IdPago: idPago,
                NuevoEstadoId: nuevoEstado
            })
        })
        .then(response => response.json())
        .then(data => {
            console.log("Respuesta del servidor:", data);

            // Cerrar el modal
            $('#basicModal').modal('hide');

            // Mostrar mensaje de éxito o error con Toastr
                toastr.success(data.message, "Éxito");
       

            // Recargar la página
            window.location.reload(); // Recargar la página
        })
        .catch(error => {
            console.error('Error:', error);
            toastr.error("Ocurrió un error inesperado.", "Error");
        });
    });

    $(document).ready(function () {
        $("#exportarPdf").click(function () {
            var idPago = @Model.Id; // Obtener el ID del pago actual
            window.location.href = "/Pagos/ExportarRecibo?id=" + idPago;
        });
    });

    document.getElementById("exportarPdf").addEventListener("click", function () {
        // Selecciona el contenedor del recibo
        var reciboElement = document.querySelector("div[style*='max-width: 800px']");

        if (!reciboElement) {
            alert("No se encontró el recibo para exportar.");
            return;
        }

        // Utiliza html2canvas para capturar el recibo como imagen
        html2canvas(reciboElement, {
            scale: 2, // Aumenta la calidad del renderizado
            useCORS: true
        }).then(canvas => {
            const imgData = canvas.toDataURL("image/png");
            const pdf = new jspdf.jsPDF("p", "mm", "a4");
            const imgWidth = 190; // Ancho de la imagen en mm
            const imgHeight = (canvas.height * imgWidth) / canvas.width;

            pdf.addImage(imgData, "PNG", 10, 10, imgWidth, imgHeight);
            pdf.save(`Recibo_${new Date().toISOString().split('T')[0]}.pdf`);
        }).catch(error => {
            console.error("Error al generar el PDF:", error);
            alert("Hubo un error al exportar el recibo.");
        });
    });

</script>

